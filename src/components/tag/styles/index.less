@import '../../style/index.less';
@tag-prefix-cls: ~'@{uni-prefix}-tag';

.@{tag-prefix-cls} {
    .reset-component();

    display: inline-block;
    height: auto;
    margin-top: 2px;
    margin-bottom: 2px;
    margin-right: 22px;
    padding: 0 8px;
    font-size: @tag-font-size;
    line-height: @tag-line-height;
    white-space: nowrap;
    background: @tag-bg-color;
    border: @border-width-base @border-style-base @tag-border-color;
    border-radius: @border-radius-base;
    opacity: 1;
    transition: all 0.3s;

    &:hover {
      opacity: 0.85;
    }

    &,
    a,
    a:hover {
      color: @tag-default-color;
    }

    > a:first-child:last-child {
      display: inline-block;
      margin: 0 -8px;
      padding: 0 8px;
    }

    &-close-icon {
      margin-left: 8px;
      font-size: 12px;
      cursor: pointer;
      transition: all 0.3s;

      &:hover {
        color: @tag-close-icon-hover-color;
      }
    }

    &-iconNode {
      display: inline-block;
      margin-right: 8px;
    }

    &-has-color {
      border-color: transparent;
      &,
      a,
      a:hover,
      .@{iconfont-css-prefix}-close,
      .@{iconfont-css-prefix}-close:hover {
        color: @tag-has-color-hover-color;        
      }
    }

    &-checkable {
      background-color: transparent;
      border-color: transparent;
      cursor: pointer;
      &:not(&-checked):hover {
        color: @primary-color;
      }
      &:active,
      &-checked {
        color: @tag-has-color-hover-color;
      }
      &-checked {
        background-color: @primary-6;
      }
      &:active {
        background-color: @primary-7;
      }
    }

    &-hidden {
      display: none;
    }

    // mixin to iterate over colors and create CSS class for each one
    .make-color-classes(@i: length(@preset-colors)) when (@i > 0) {
      .make-color-classes(@i - 1);
      @color: extract(@preset-colors, @i);
      @lightColor: '@{color}-1';
      @lightBorderColor: '@{color}-3';
      @darkColor: '@{color}-6';
      @textColor: '@{color}-7';
      &-@{color} {
        color: @@textColor;
        background: @@lightColor;
        border-color: @@lightBorderColor;
      }
      &-@{color}-inverse {
        color: @tag-has-color-hover-color;
        background: @@darkColor;
        border-color: @@darkColor;
      }
    }

    .make-status-color-classes(@color, @status) {
      @lightColor: '@{color}-1';
      @lightBorderColor: '@{color}-3';
      @darkColor: '@{color}-6';
      &-@{status} {
        color: @@darkColor;
        background: @@lightColor;
        border-color: @@lightBorderColor;
      }
    }

    .make-color-classes();

    .make-status-color-classes('green', success);
    .make-status-color-classes('blue', processing);
    .make-status-color-classes('red', error);
    .make-status-color-classes('orange', warning);

    // To ensure that a space will be placed between character and `Icon`.
    > .@{iconfont-css-prefix} + span,
    > span + .@{iconfont-css-prefix} {
      margin-left: 7px;
    }
  }
